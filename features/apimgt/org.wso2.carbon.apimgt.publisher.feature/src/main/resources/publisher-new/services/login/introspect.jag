<%
/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
    include("/services/constants.jag");
    include("/services/jagg.jag");

    var log = new Log("Jaggery service for token introspection");

    var userInfoEndpoint = MGT_TRANSPORT + HOST + ":" + getServerPort() + "/oauth2/userinfo";
    var introspectEndpoint = MGT_TRANSPORT + HOST + ":" + getServerPort() + "/oauth2/introspect";
    var tokenP1 = request.getCookie("WSO2_AM_TOKEN_1_Default").value;
    var tokenP2 = request.getCookie("AM_ACC_TOKEN_DEFAULT_P2").value;
    var token = tokenP1 + tokenP2;
    var userData = {};
    var userResult = get(userInfoEndpoint, userData , {
        "Authorization": "Bearer " + token
    });

    var data = {token: token }
    var introspectResult = post(introspectEndpoint, data , {
        "Authorization": "Basic YWRtaW46YWRtaW4=", // TODO: get super admin username password from configs and do encoding ~tmkb
        "Content-Type": "application/x-www-form-urlencoded"
    });

    log.debug("Introspection result json: " + introspectResult);
    response.contentType = "application/json";

    var scopes = "apim:api_delete apim:api_view apim:api_create apim:api_publish apim:tier_view apim:tier_manage apim:subscription_view apim:subscription_block apim:mediation_policy_view apim:api_workflow openid"; // TODO: fetch from introspect request

    if (introspectResult.data.active) {
        print(introspectResult.data);
    } else {
        log.warn("Something went wrong while introspecting the token " + tokenP1 + tokenP2 );

        // TODO: remove mock once the introspect API issue get resolved ~tmkb
        var mock = {
            "exp": 1464161608,
            "username": JSON.parse(userResult.data).sub,
            "active": true,
            "token_type": "Bearer",
            "client_id": "rgfKVdnMQnJSSr_pKFTxj3apiwYa",
            "iat": 1464158008,
            "scope": scopes
          };
          print(mock);
    }

%>
